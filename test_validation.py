"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞ —Ä–∞–±–æ—Ç—ã
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django –æ–∫—Ä—É–∂–µ–Ω–∏—è
sys.path.append('z:/–û–±—É—á–µ–Ω–∏–µ/Top. Python/Diploma')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'autoservice.settings')
django.setup()

from django.core.exceptions import ValidationError
from django.utils import timezone
from datetime import date, time, timedelta
from core.models import WorkSchedule
from core.forms import WorkScheduleForm
from users.models import User

def test_schedule_validation():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"""
    
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞ —Ä–∞–±–æ—Ç—ã")
    print("=" * 50)
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    try:
        master = User.objects.filter(role='master').first()
        if not master:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –º–∞—Å—Ç–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return
        
        print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–∞—Å—Ç–µ—Ä–∞: {master.get_full_name() or master.username}")
        
        # –¢–µ—Å—Ç 1: –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞—Ç
        print("\nüìÖ –¢–µ—Å—Ç 1: –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞—Ç")
        
        # –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–Ω—å—à–µ –Ω–∞—á–∞–ª–∞
        try:
            schedule_data = {
                'master': master.id,
                'schedule_type': 'weekly',
                'start_date': date.today() + timedelta(days=7),
                'end_date': date.today() + timedelta(days=3),  # –†–∞–Ω—å—à–µ –Ω–∞—á–∞–ª–∞
                'start_time': time(9, 0),
                'end_time': time(18, 0),
                'is_active': True
            }
            
            form = WorkScheduleForm(schedule_data, autoservice=master.autoservice)
            if form.is_valid():
                print("‚ùå –§–æ—Ä–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–π (–¥–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–Ω—å—à–µ –Ω–∞—á–∞–ª–∞)")
            else:
                print("‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ —Ñ–æ—Ä–º–∞ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏")
                print(f"   –û—à–∏–±–∫–∏: {form.errors}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ 1: {e}")
        
        # –¢–µ—Å—Ç 2: –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏
        print("\n‚è∞ –¢–µ—Å—Ç 2: –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏")
        
        try:
            schedule_data = {
                'master': master.id,
                'schedule_type': 'weekly',
                'start_date': date.today() + timedelta(days=1),
                'end_date': date.today() + timedelta(days=30),
                'start_time': time(18, 0),  # –ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è
                'end_time': time(9, 0),     # –î–æ –Ω–∞—á–∞–ª–∞
                'is_active': True
            }
            
            form = WorkScheduleForm(schedule_data, autoservice=master.autoservice)
            if form.is_valid():
                print("‚ùå –§–æ—Ä–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–π (–≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–Ω—å—à–µ –Ω–∞—á–∞–ª–∞)")
            else:
                print("‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ —Ñ–æ—Ä–º–∞ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º")
                print(f"   –û—à–∏–±–∫–∏: {form.errors}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ 2: {e}")
        
        # –¢–µ—Å—Ç 3: –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å
        print("\nüïê –¢–µ—Å—Ç 3: –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å")
        
        try:
            schedule_data = {
                'master': master.id,
                'schedule_type': 'weekly',
                'start_date': date.today() + timedelta(days=1),
                'end_date': date.today() + timedelta(days=30),
                'start_time': time(6, 0),   # 6:00
                'end_time': time(23, 0),    # 23:00 (17 —á–∞—Å–æ–≤)
                'is_active': True
            }
            
            form = WorkScheduleForm(schedule_data, autoservice=master.autoservice)
            if form.is_valid():
                print("‚ùå –§–æ—Ä–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–π (—Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –¥–µ–Ω—å)")
            else:
                print("‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ —Ñ–æ—Ä–º–∞ —Å–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–º –¥–Ω–µ–º")
                print(f"   –û—à–∏–±–∫–∏: {form.errors}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ 3: {e}")
        
        # –¢–µ—Å—Ç 4: –í–∞–ª–∏–¥–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫
        print("\n‚úÖ –¢–µ—Å—Ç 4: –í–∞–ª–∏–¥–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫")
        
        try:
            schedule_data = {
                'master': master.id,
                'schedule_type': 'weekly',
                'start_date': date.today() + timedelta(days=1),
                'end_date': date.today() + timedelta(days=30),
                'start_time': time(9, 0),
                'end_time': time(18, 0),
                'is_active': True
            }
            
            form = WorkScheduleForm(schedule_data, autoservice=master.autoservice)
            if form.is_valid():
                print("‚úÖ –í–∞–ª–∏–¥–Ω–∞—è —Ñ–æ—Ä–º–∞ –ø—Ä–∏–Ω—è—Ç–∞")
                # –ù–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º, —Ç–æ–ª—å–∫–æ —Ç–µ—Å—Ç–∏—Ä—É–µ–º
            else:
                print("‚ùå –í–∞–ª–∏–¥–Ω–∞—è —Ñ–æ—Ä–º–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞")
                print(f"   –û—à–∏–±–∫–∏: {form.errors}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ 4: {e}")
        
        print("\n" + "=" * 50)
        print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
        
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

if __name__ == "__main__":
    test_schedule_validation()
